package deakin.sit.improvedpersonalizedlearningexperiencesapp.task;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

import deakin.sit.improvedpersonalizedlearningexperiencesapp.R;
import deakin.sit.improvedpersonalizedlearningexperiencesapp.database.AppDatabase;
import deakin.sit.improvedpersonalizedlearningexperiencesapp.database.StudentTask;
import deakin.sit.improvedpersonalizedlearningexperiencesapp.database.StudentTaskDao;
import deakin.sit.improvedpersonalizedlearningexperiencesapp.database.StudentTaskQuestion;
import deakin.sit.improvedpersonalizedlearningexperiencesapp.database.StudentTaskQuestionDao;

public class TaskQuestionFragment extends Fragment {
    StudentTaskDao studentTaskDao;
    StudentTaskQuestionDao studentTaskQuestionDao;
    int currentTaskID;
    StudentTask currentTask;
    List<StudentTaskQuestion> currentQuestionList;


    TextView noteTextView, taskTitleTextView, taskDescriptionTextView;
    Button submitButton;
    RecyclerView questionRecyclerView;
    QuestionAdapter questionAdapter;
    public TaskQuestionFragment(int taskID) {
        this.currentTaskID = taskID;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_task_question, container, false);

        // Database
        studentTaskDao = AppDatabase.getInstance(getContext()).studentTaskDao();
        studentTaskQuestionDao = AppDatabase.getInstance(getContext()).studentTaskQuestionDao();
        currentTask = studentTaskDao.getByTaskID(currentTaskID);
        currentQuestionList = studentTaskQuestionDao.getAllByTaskID(currentTaskID);

        // Setup views
        questionRecyclerView = view.findViewById(R.id.questionRecyclerView);
        submitButton = view.findViewById(R.id.submitButton);
        noteTextView = view.findViewById(R.id.noteTextView);
        taskTitleTextView = view.findViewById(R.id.taskTitleTextView);
        taskDescriptionTextView = view.findViewById(R.id.taskDescriptionTextView);

        // Config views
        noteTextView.setText("Generated by AI");
        taskTitleTextView.setText(currentTask.getTitle());
        taskDescriptionTextView.setText(currentTask.getDescription());

        // Config button
        submitButton.setOnClickListener(this::handleSubmitButton);

        // Config recycler view
        questionAdapter = new QuestionAdapter(currentQuestionList, this);
        questionRecyclerView.setAdapter(questionAdapter);
        questionRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));

        return view;
    }

    public void handleSubmitButton(View view) {
        int score = 0;
        // Update database: answer for questions
        currentQuestionList = questionAdapter.getResult();
        for (StudentTaskQuestion question : currentQuestionList) {
            studentTaskQuestionDao.update(question);
            if (question.isCorrest()) {
                score += 1;
            }
        }
        // Update database: task status and score
        currentTask.setScore(score);
        currentTask.setFinish(true);
        studentTaskDao.update(currentTask);

        // To result fragment
        ((TaskActivity) getActivity()).finishTask();
    }
}